{
  "Task_id": 98,
  "Github_ID": "111898781",
  "Github_Project_Name": "alipay",
  "Programming_Language": "PHP",
  "suffix": ".php",
  "Interface_class": "IPC",
  "Interface_name": "HTTP client using cURL in PHP",
  "Instruction": "Task Description: Implement a PHP class for interacting with Alipay's payment gateway, specifically for processing bar code payments. The class should handle request configuration, signature generation, and HTTP communication with Alipay's API.\n\nClass Description: The AlipayService class provides methods to configure and execute payments through Alipay's payment gateway. It handles parameter setting, request signing, and communication with Alipay's API endpoint.\n\nAttributes:\n- appId: [string] - The application ID provided by Alipay\n- charset: [string] - Character encoding (default: 'utf-8')\n- notifyUrl: [string] - URL for payment notifications\n- rsaPrivateKey: [string] - RSA private key for signing requests\n- totalFee: [string] - Total payment amount\n- outTradeNo: [string] - Merchant's unique order number\n- orderName: [string] - Description of the order\n- authCode: [string] - Customer's payment authorization code\n\nMethods:\n- __construct() -> [void] - Initializes the class with default charset\n- setAppid($appid) -> [void] - Sets the Alipay application ID\n- setNotifyUrl($notifyUrl) -> [void] - Sets the notification URL\n- setRsaPrivateKey($rsaPrivateKey) -> [void] - Sets the RSA private key\n- setTotalFee($payAmount) -> [void] - Sets the payment amount\n- setOutTradeNo($outTradeNo) -> [void] - Sets the merchant order number\n- setOrderName($orderName) -> [void] - Sets the order description\n- setAuthCode($authCode) -> [void] - Sets the customer's payment auth code\n- doPay() -> [array] - Executes the payment request and returns the response\n- curlPost($url, $postData, $options) -> [string] - Sends a POST request to the specified URL (private method)\n- generateSign($params, $signType) -> [string] - Generates the request signature (private method, implementation not shown)",
  "Canonical_solution": "class AlipayService\n{\n    protected $appId;\n    protected $charset;\n    protected $notifyUrl;\n    protected $rsaPrivateKey;\n    protected $totalFee;\n    protected $outTradeNo;\n    protected $orderName;\n    protected $authCode;\n\n    public function __construct()\n    {\n        $this->charset = 'utf-8';\n    }\n\n    public function setAppid($appid)\n    {\n        $this->appId = $appid;\n    }\n\n    public function setNotifyUrl($notifyUrl)\n    {\n        $this->notifyUrl = $notifyUrl;\n    }\n\n    public function setRsaPrivateKey($rsaPrivateKey)\n    {\n        $this->rsaPrivateKey = $rsaPrivateKey;\n    }\n\n    public function setTotalFee($payAmount)\n    {\n        $this->totalFee = $payAmount;\n    }\n\n    public function setOutTradeNo($outTradeNo)\n    {\n        $this->outTradeNo = $outTradeNo;\n    }\n\n    public function setOrderName($orderName)\n    {\n        $this->orderName = $orderName;\n    }\n\n    public function setAuthCode($authCode)\n    {\n        $this->authCode = $authCode;\n    }\n\n    public function doPay()\n    {\n        $requestConfigs = array(\n            'out_trade_no'=>$this->outTradeNo,\n            'scene'=>'bar_code',\n            'auth_code'=>$this->authCode,\n            'total_amount'=>$this->totalFee,\n            'subject'=>$this->orderName,\n            'store_id'=>'DEDEMAO_001',\n            'timeout_express'=>'2m',\n        );\n        $commonConfigs = array(\n            'app_id' => $this->appId,\n            'method' => 'alipay.trade.pay',\n            'format' => 'JSON',\n            'charset'=>$this->charset,\n            'sign_type'=>'RSA2',\n            'timestamp'=>date('Y-m-d H:i:s'),\n            'version'=>'1.0',\n            'notify_url' => $this->notifyUrl,\n            'biz_content'=>json_encode($requestConfigs),\n        );\n        $commonConfigs[\"sign\"] = $this->generateSign($commonConfigs, $commonConfigs['sign_type']);\n        $result = $this->curlPost('https://openapi.alipay.com/gateway.do?charset='.$this->charset,$commonConfigs);\n        return json_decode($result,true);\n    }\n\n    public function curlPost($url = '', $postData = '', $options = array())\n    {\n        if (is_array($postData)) {\n            $postData = http_build_query($postData);\n        }\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_POST, 1);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 30);\n        if (!empty($options)) {\n            curl_setopt_array($ch, $options);\n        }\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        $data = curl_exec($ch);\n        curl_close($ch);\n        return $data;\n    }\n}",
  "FSMID_for_test": 132,
  "Code_level": "Class-level"
}