{
  "Task_id": 384,
  "Github_ID": "55224431",
  "Github_Project_Name": "whatsmars",
  "Programming_Language": "Java",
  "suffix": ".java",
  "Interface_class": "IPC",
  "Interface_name": "RocketMQ Producer in Java",
  "Instruction": "Task Description: Create a Java class that implements a RocketMQ producer capable of sending ordered messages to specified topics with tags, while maintaining message order based on an order ID.\n\nClass Description: The Producer class encapsulates the functionality of a RocketMQ message producer. It handles initialization, message sending with ordering guarantees, and resource cleanup. The class uses RocketMQ's DefaultMQProducer to send messages to a specified topic, with the ability to maintain message order through a custom MessageQueueSelector.\n\nAttributes:\n- producer: DefaultMQProducer - The core RocketMQ producer instance responsible for sending messages\n- producerGroup: String (implicit) - The producer group name passed to the constructor\n- namesrvAddr: String (implicit) - The NameServer address passed to the constructor\n\nMethods:\n- Constructor: Producer(String producerGroup, String namesrvAddr) -> void - Initializes the producer with the given group name and NameServer address\n- start: start() -> void - Starts the producer instance to begin sending messages\n- shutdown: shutdown() -> void - Shuts down the producer instance and releases resources\n- sendOrderedMessage: sendOrderedMessage(String topic, String[] tags, String key, String body, int orderId) -> SendResult - Sends an ordered message to the specified topic with the given tags, key, and body, using the orderId to maintain message order",
  "Canonical_solution": "import org.apache.rocketmq.client.producer.DefaultMQProducer;\nimport org.apache.rocketmq.client.producer.MessageQueueSelector;\nimport org.apache.rocketmq.client.producer.SendResult;\nimport org.apache.rocketmq.common.message.Message;\nimport org.apache.rocketmq.common.message.MessageQueue;\nimport org.apache.rocketmq.remoting.common.RemotingHelper;\n\nimport java.io.UnsupportedEncodingException;\nimport java.util.List;\n\npublic class Producer {\n\n    private DefaultMQProducer producer;\n\n    public Producer(String producerGroup, String namesrvAddr) {\n        this.producer = new DefaultMQProducer(producerGroup);\n        this.producer.setNamesrvAddr(namesrvAddr);\n    }\n\n    public void start() throws Exception {\n        producer.start();\n    }\n\n    public void shutdown() {\n        producer.shutdown();\n    }\n\n    public SendResult sendOrderedMessage(String topic, String[] tags, String key, String body, int orderId) \n        throws Exception {\n        Message msg = new Message(topic, tags[orderId % tags.length], key,\n            body.getBytes(RemotingHelper.DEFAULT_CHARSET));\n        \n        SendResult sendResult = producer.send(msg, new MessageQueueSelector() {\n            @Override\n            public MessageQueue select(List<MessageQueue> mqs, Message msg, Object arg) {\n                Integer id = (Integer) arg;\n                int index = id % mqs.size();\n                return mqs.get(index);\n            }\n        }, orderId);\n\n        return sendResult;\n    }\n}",
  "FSMID_for_test": 42,
  "Code_level": "Class-level"
}