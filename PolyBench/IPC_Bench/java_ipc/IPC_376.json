{
  "Task_id": 376,
  "Github_ID": "75164823",
  "Github_Project_Name": "rocketmq",
  "Programming_Language": "Java",
  "suffix": ".java",
  "Interface_class": "IPC",
  "Interface_name": "RocketMQ Consumer in Java",
  "Instruction": "Task Description: Create a Java class that implements a RocketMQ push consumer to asynchronously receive and process messages from a specified topic with tag filtering.\n\nClass Description: The PushConsumer class is a RocketMQ message consumer that subscribes to a topic and processes incoming messages using a concurrent message listener. It supports broadcasting message model and can be configured with various consumption strategies.\n\nAttributes:\n- CONSUMER_GROUP: [String] - The consumer group name for this consumer instance\n- DEFAULT_NAMESRVADDR: [String] - Default NameServer address for RocketMQ\n- TOPIC: [String] - The topic to subscribe to for messages\n- SUB_EXPRESSION: [String] - Tag filter expression for message subscription\n- consumer: [DefaultMQPushConsumer] - The RocketMQ push consumer instance\n\nMethods:\n- PushConsumer() [Constructor] -> [void] - Initializes the consumer with default settings, subscribes to the topic, and registers the message listener\n- start() -> [void] - Starts the consumer to begin receiving messages\n- shutdown() -> [void] - Shuts down the consumer and releases resources",
  "Canonical_solution": "import org.apache.rocketmq.client.consumer.DefaultMQPushConsumer;\nimport org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyStatus;\nimport org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently;\nimport org.apache.rocketmq.client.exception.MQClientException;\nimport org.apache.rocketmq.common.consumer.ConsumeFromWhere;\nimport org.apache.rocketmq.remoting.protocol.heartbeat.MessageModel;\n\npublic class PushConsumer {\n\n    public static final String CONSUMER_GROUP = \"please_rename_unique_group_name_1\";\n    public static final String DEFAULT_NAMESRVADDR = \"127.0.0.1:9876\";\n    public static final String TOPIC = \"TopicTest\";\n    public static final String SUB_EXPRESSION = \"TagA || TagC || TagD\";\n\n    private DefaultMQPushConsumer consumer;\n\n    public PushConsumer() throws MQClientException {\n        consumer = new DefaultMQPushConsumer(CONSUMER_GROUP);\n        consumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_FIRST_OFFSET);\n        consumer.setMessageModel(MessageModel.BROADCASTING);\n        consumer.subscribe(TOPIC, SUB_EXPRESSION);\n        consumer.registerMessageListener((MessageListenerConcurrently) (msgs, context) -> {\n            System.out.printf(\"%s Receive New Messages: %s %n\", Thread.currentThread().getName(), msgs);\n            return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n        });\n    }\n\n    public void start() throws MQClientException {\n        consumer.start();\n        System.out.printf(\"Broadcast Consumer Started.%n\");\n    }\n\n    public void shutdown() {\n        consumer.shutdown();\n    }\n}",
  "FSMID_for_test": 43,
  "Code_level": "Class-level"
}