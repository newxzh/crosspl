{
  "Task_id": 588,
  "Github_ID": "6801852",
  "Github_Project_Name": "greys-anatomy",
  "Programming_Language": "Java",
  "suffix": ".java",
  "Interface_class": "IPC",
  "Interface_name": "java.net Socket",
  "Instruction": "Task Description: Create a Java class that establishes and manages a TCP client connection to a server using sockets, enabling bidirectional communication through input/output streams.\n\nClass Description: The GreysConsole class represents a TCP client that connects to a specified server address, maintains the connection, and provides mechanisms for sending and receiving data. It handles connection lifecycle and resource cleanup.\n\nAttributes:\n- socket: [Socket] - The underlying TCP socket connection to the server\n- socketWriter: [BufferedWriter] - Buffered writer for sending data to the server\n- socketReader: [BufferedReader] - Buffered reader for receiving data from the server\n- isRunning: [boolean] - Flag indicating whether the connection is active\n\nMethods:\n- connect: [InetSocketAddress] -> [Socket] - Establishes a connection to the server at the specified address, configures socket options, and initializes I/O streams\n- shutdown: [void] -> [void] - Closes all resources (socket and streams) and marks the connection as inactive\n- GreysConsole (constructor): [InetSocketAddress] -> [void] - Creates a new instance and establishes connection to the specified server address",
  "Canonical_solution": "import com.github.ompc.greys.core.command.Commands;\nimport jline.console.ConsoleReader;\nimport jline.console.completer.Completer;\nimport jline.console.history.FileHistory;\nimport jline.console.history.History;\nimport jline.console.history.MemoryHistory;\nimport org.apache.commons.lang3.StringUtils;\n\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.*;\nimport java.net.InetSocketAddress;\nimport java.net.Socket;\nimport java.util.List;\nimport java.util.SortedSet;\nimport java.util.TreeSet;\n\nimport static com.github.ompc.greys.core.util.GaStringUtils.DEFAULT_PROMPT;\nimport static java.io.File.separatorChar;\nimport static java.lang.System.getProperty;\nimport static jline.console.KeyMap.CTRL_D;\nimport static jline.internal.Preconditions.checkNotNull;\nimport static org.apache.commons.io.IOUtils.closeQuietly;\nimport static org.apache.commons.lang3.StringUtils.EMPTY;\nimport static org.apache.commons.lang3.StringUtils.isNotBlank;\n\npublic class GreysConsole {\n\n    private final Socket socket;\n    private BufferedWriter socketWriter;\n    private BufferedReader socketReader;\n    private volatile boolean isRunning;\n\n    public GreysConsole(InetSocketAddress address) throws IOException {\n        this.socket = connect(address);\n        this.isRunning = true;\n    }\n\n    private Socket connect(InetSocketAddress address) throws IOException {\n        final Socket socket = new Socket();\n        socket.setSoTimeout(0);\n        socket.connect(address, 60 * 1000);\n        socket.setKeepAlive(true);\n        socketWriter = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));\n        socketReader = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n        return socket;\n    }\n\n    private void shutdown() {\n        isRunning = false;\n        closeQuietly(socketWriter);\n        closeQuietly(socketReader);\n        closeQuietly(socket);\n    }\n\n}",
  "FSMID_for_test": 1,
  "Code_level": "Class-level"
}