{
  "Task_id": 419,
  "Github_ID": "5431309",
  "Github_Project_Name": "Mekanism",
  "Programming_Language": "Java",
  "suffix": ".java",
  "Interface_class": "IPC",
  "Interface_name": "TCP Client-side Java.io",
  "Instruction": "Task Description: Create a Java class that implements a TCP client for voice communication, handling both input and output streams for audio data transmission.\n\nClass Description: The VoiceClient class extends Thread to create a TCP client that connects to a voice server. It manages audio stream connections, handles data transmission, and provides methods for connection management.\n\nAttributes:\n- format: AudioFormat - The audio format configuration for the voice data\n- outputThread: VoiceOutput - Thread handling outgoing voice data\n- inputThread: VoiceInput - Thread handling incoming voice data\n- output: DataOutputStream - Output stream for sending data to server\n- input: DataInputStream - Input stream for receiving data from server\n- running: boolean - Flag indicating if the client is active\n- socket: Socket - The TCP socket connection\n- ip: String - The IP address of the server to connect to\n\nMethods:\n- VoiceClient(String ip) -> None - Constructor that initializes the client with server IP\n- run() -> None - Main thread method that establishes connection and starts I/O threads\n- disconnect() -> None - Closes all connections and stops the client\n- isRunning() -> boolean - Returns the running status of the client\n- getOutputStream() -> DataOutputStream - Returns the output stream\n- getInputStream() -> DataInputStream - Returns the input stream\n- getAudioFormat() -> AudioFormat - Returns the audio format configuration",
  "Canonical_solution": "import java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.DataInputStream;\nimport java.io.DataOutputStream;\nimport java.net.ConnectException;\nimport java.net.Socket;\nimport javax.sound.sampled.AudioFormat;\n\npublic class VoiceClient extends Thread {\n\n    private final AudioFormat format = new AudioFormat(16_000F, 16, 1, true, true);\n    private VoiceOutput outputThread;\n    private VoiceInput inputThread;\n    private DataOutputStream output;\n    private DataInputStream input;\n    private boolean running;\n    private Socket socket;\n    private final String ip;\n\n    public VoiceClient(String ip) {\n        super(\"VoiceServer Client Thread \" + ip);\n        this.ip = ip;\n        setDaemon(true);\n    }\n\n    @Override\n    public void run() {\n        try {\n            socket = new Socket(ip, MekanismAdditionsConfig.additions.voicePort.get());\n            running = true;\n\n            input = new DataInputStream(new BufferedInputStream(socket.getInputStream()));\n            output = new DataOutputStream(new BufferedOutputStream(socket.getOutputStream()));\n\n            (outputThread = new VoiceOutput(this)).start();\n            (inputThread = new VoiceInput(this)).start();\n        } catch (ConnectException e) {\n        } catch (Exception e) {\n        }\n    }\n\n    public void disconnect() {\n        try {\n            if (inputThread != null) {\n                inputThread.interrupt();\n                inputThread.close();\n            }\n            if (outputThread != null) {\n                outputThread.interrupt();\n                outputThread.close();\n            }\n            if (output != null) {\n                output.close();\n            }\n            if (input != null) {\n                input.close();\n            }\n            if (socket != null) {\n                socket.close();\n            }\n\n            interrupt();\n\n            running = false;\n        } catch (Exception e) {\n        }\n    }\n\n    public boolean isRunning() {\n        return running;\n    }\n\n    public DataOutputStream getOutputStream() {\n        return output;\n    }\n\n    public DataInputStream getInputStream() {\n        return input;\n    }\n\n    public AudioFormat getAudioFormat() {\n        return format;\n    }\n}",
  "FSMID_for_test": 15,
  "Code_level": "Class-level"
}