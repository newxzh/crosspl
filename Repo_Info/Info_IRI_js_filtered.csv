File_path,Classfier,Classfier_ID,Interface_class,Interface_name,Status_description
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_empty.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\get_basic_auth_no_user.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\foursquare\checkins.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\contacts\0.0.2\package\sync.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\hook.io_9305769\view\hook\_rev.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Common\node\lutil.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\6\node-open-mining-portal_15887579\libs\apiCryptsy.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\pinyin_802229\tools\robot-zdic-zi.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\node_modules\links\oembed.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\8\store.js_743723\scripts\saucelabs\saucelabs-api.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\9\todomvc_1844251\examples\typescript-react\node_modules\director\test\server\helpers\macros.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\QuantumultX_290135452\yichahucha\clock_in.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\hook.io_9305769\lib\web\web.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\Resources_563600239\Script\TBPrice.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\lightproxy_230353730\vendor\whistle.scriptfile\lib\util.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Meteor-CollectionFS_7455107\packages\data-man\server\data-man-url.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_with_browser_headers.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Apps\dashboardv3\dashboard-client.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Collections\Links\longus.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\node_modules\instagram\client.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\jam_4373698\lib\github.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\foursquare\friends.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\Flickr\photos.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\democracyos_9265076\lib\api\signup\lib\signup.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_with_urlencoded_data.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_escaped_double_quotes_in_single_quotes.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\QuantumultX_290135452\yichahucha\nf_rating.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\9\vega_7994556\docs\releases\v1.5.0\vega.min.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\BodyMedia\auth.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\9\vega_7994556\docs\releases\v1\vega.min.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\hook.io_9305769\view\account\billing\index.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Ops\webservice.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\6\parse-server_50603846\spec\ParseLiveQueryServer.spec.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\10\yui3_85670\src\get\js\get-nodejs.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\local-npm_22590963\lib\index.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\twit\lib\twitter.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\node_modules\links\links.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\ios_rule_script_276008164\source\javascript\7abc2b807287bb592981145658b7b20b.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\ios_rule_script_276008164\script\bilibili\bilibili_plus.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Collections\Links\api.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\node_modules\links\longus.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\hook.io_9305769\view\stats.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\Withings\auth.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Loon-Gallery_491005227\backend\gallery.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Common\node\connector\oauth2.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\3\elasticsearch-dump_15321010\test\parentchild.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_with_single_quotes_inside_double_quotes.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\photos\0.0.2\package\dataStore.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\WorkInProgress\GoodReads\client.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\deployd_2367681\test\support.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_with_data-ascii.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\Resources_563600239\Script\JD\JdPrice.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Collections\Search\search.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\readability_3856601\src\readability.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Common\node\locker.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\1\antSword_53655574\node_modules\random-fake-useragent\create-data.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\QuantumultX_290135452\yichahucha\jd_price_lite.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\ios_rule_script_276008164\source\javascript\c34dc3226966fd23aaf8a3af2fbb7dad.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\lscheduler-test-local.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\loklak_walls_61033249\iframely\lib\request.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\node_modules\links\dataIn.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\GitHub\repos.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\Resources_563600239\Script\Bilibili\JBBilibili.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\loklak_walls_61033249\iframely\lib\core.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\Resources_563600239\Script\SubZero.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\checkinpanel_398717902\utils.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\get_with_browser_headers.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\3\gekko_10020773\exchange\wrappers\exmo.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\locker-client-test.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\3\freecodecamp.cn_55026106\server\utils\index.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\6\nodebeginner.org_1618145\blog\post\nodejs-tutorial-optimizing-code-performance-using-async\index.html,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\links\0.0.4\package\links.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\places\0.0.2\package\dataStore.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\ios_rule_script_276008164\script\smzdm\smzdm_remove_ads.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\WorkInProgress\IMAP\sync.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\7\QuantumultX_290135452\yichahucha\jd_price.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\3\freecodecamp.cn_55026106\server\boot\randomAPIs.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\collection-places-test.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\loklak_walls_61033249\oauth-proxy\api.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Ops\registry.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_with_urlencoded_data_and_headers.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\links\0.0.4\package\longus.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\10\yui3_85670\build\get-nodejs\get-nodejs-debug.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\migrations\0000000000006.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\1\breach_core_12977854\lib\module_manager.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\loklak_walls_61033249\iframely\lib\utils.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\ios_rule_script_276008164\script\famijia\famijia_checkin.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\collection-links-test.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\lpushmanager-test-local.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Collections\Links\dataIn.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\links\0.0.4\package\oembed.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\3\elasticsearch-dump_15321010\test\csv-import.tests.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\WorkInProgress\TwitterSearch\sync.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\4\jam_4373698\lib\utils.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\post_with_double_quotes_inside_single_quotes.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\links\0.0.4\package\dataIn.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\9\todomvc_1844251\examples\typescript-react\node_modules\director\test\server\http\http-test.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\3\forever_942903\test\core\start-stop-json-array-test.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\node-request\get_with_all_numerical_data.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\10\yui3_85670\build\get-nodejs\get-nodejs-coverage.js,Inter-Process Communication (IPC),95,JavaScript*,HTTP Client - side based on request in javascript,"['Step 1: Import the request module', 'Step 2: Call request method such as request.get/post/etc', 'Step 3: Configure HTTP options like URL, headers, and data', 'Step 4: Handle the HTTP response via callback']"
D:\CAE\Splited_Repository\10\yapi_59996401\server\controllers\project.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\aihao.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\directv.com\directv.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\axios-mock-adapter_54378064\test\reply_once.spec.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\6\node-slack-sdk_18117991\examples\express-all-interactions\server.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\6\myspeed_478222232\server\integrations\pushover.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\allente.dk\allente.dk.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\dooringx_384142950\script\translate.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\canalplus.com\canalplus.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\digea.gr\digea.gr.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\9\tabletop_3346542\src\tabletop.min.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\4399_yx.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\guida.tv\guida.tv.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\4\ios_rule_script_276008164\script\obsolete\eleme\eleme_daily.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\API_245077032\scrapers\covid-19\getWorldometers.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\enquirer_66801791\examples\auth\oauth.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tv-programme.telecablesat.fr\tv-programme.telecablesat.fr.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\4399_zhb.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\BrasilAPI_237140949\tests\corretoras-v1.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tv.movistar.com.pe\tv.movistar.com.pe.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tv2go.t-2.net\tv2go.t-2.net.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tvguide.com\tvguide.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\7\QLScriptPublic_574012459\fenxiang.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\ali-oss_18427025\test\node\object.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\easy-mock_101556009\controllers\util.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\gatotv.com\gatotv.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\expo-cli_128895073\packages\xdl\scripts\updateCaches.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\7\QLScriptPublic_574012459\fsdlb.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\reportv.com.ar\reportv.com.ar.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\telsu.fi\telsu.fi.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\xjvideo.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\sky.de\sky.de.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\v3.myafn.dodmedia.osd.mil\v3.myafn.dodmedia.osd.mil.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\jiepei.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\10\youtube-dl-gui_252325835\modules\QueryManager.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\aoqi.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\maxtvgo.mk\maxtvgo.mk.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\5\jss_25131304\scripts\create-github-release.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\ziggogo.tv\ziggogo.tv.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\10\wrangler-legacy_175043545\npm\binary-install.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\musor.tv\musor.tv.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\faker2_464113799\jd_try.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\bigfun.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\ablesci.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\API_245077032\updateCheck.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\quqi.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tvmusor.hu\tvmusor.hu.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\aliyun.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\6\Neurite_624122214\localhost_servers\ai-proxy\ai-proxy.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\6\myspeed_478222232\server\controller\node.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\BrasilAPI_237140949\tests\isbn-v1.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\9\tts-vue_518004533\electron\utils\api.ts,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\horizon.tv\horizon.tv.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\bundlephobia_86363993\server\api\BuildService.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\BrasilAPI_237140949\tests\cpetc\cidade-v1.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tv.lv\tv.lv.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tv24.se\tv24.se.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\aimeos-headless_432180204\public\build\assets\app-06d2b2d4.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\cubmu.com\cubmu.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\du163.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\freeview.co.uk\freeview.co.uk.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tvpassport.com\tvpassport.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\ccw.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\hykb_activities.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\6\node-soap_1584707\test\request-no-envelope-body-test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\axios-mock-adapter_54378064\test\basics.spec.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\7\QLScriptPublic_574012459\hyjk.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\dstv.com\dstv.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\digiturk.com.tr\digiturk.com.tr.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\API_245077032\scrapers\covid-19\govScrapers\getAustria.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\entertainment.ie\entertainment.ie.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\9\tunnelmole-client_598995344\cjs\bin\postinstall.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\mhy_xqtg.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\6\myspeed_478222232\server\integrations\webhook.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\10\yapi_59996401\server\controllers\open.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tv.mail.ru\tv.mail.ru.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\bundlesize_95533278\src\api.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\API_245077032\scrapers\covid-19\govScrapers\getIsrael.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tvarenasport.com\tvarenasport.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\qidian.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\jjwxc_Welfare.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\6\myspeed_478222232\server\integrations\healthChecks.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\Antmove_197347437\packages\@amove\wx\src\utils\index.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\xiang5.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\axios-mock-adapter_54378064\test\asymmetric.spec.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\BrasilAPI_237140949\tests\registrobr.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\17k.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkinpanel_398717902\ck_aqc.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\8\shadowsocks-manager_26642716\plugins\email\index.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\axios-mock-adapter_54378064\test\throw_exception_on_no_match.spec.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\2\checkbox_265085339\scripts\everphoto.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tvim.tv\tvim.tv.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\chaines-tv.orange.fr\chaines-tv.orange.fr.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\nzxmltv.com\nzxmltv.com.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\9\unicons_168150137\scripts\line\download.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\epg_347434932\sites\tvcesoir.fr\tvcesoir.fr.config.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\4\ios_rule_script_276008164\script\smzdm\smzdm_daily.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\3\double-take_346734534\api\src\util\fs.util.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\BrasilAPI_237140949\tests\banks-v1.test.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\1\API_245077032\scrapers\covid-19\govScrapers\getGermany.js,Inter-Process Communication (IPC),94,JavaScript*,HTTP Client-side based on Axios,"['Step 1: Import the axios library to enable HTTP client functionality', 'Step 2: Choose and initiate the HTTP method for the request (GET, POST, etc.)', 'Step 3: Configure the request with URL, headers, query parameters, and payload', 'Step 4: Handle errors using catch block or error callback']"
D:\CAE\Splited_Repository\5\kandan_3639793\app\assets\javascripts\lib\jquery.filedrop.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\django-material_29337344\material\static\material\js\materialize.components.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\dalai_613075789\bin\web\public\socket.io.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\search-by-image_94629944\src\utils\app.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\quaggaJS_23613565\dist\quagga.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\Snap.svg_12143585\demos\snap-ad\src\js\vendor\snap.svg.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\3\Editr.js_9606326\editr\libs\parser.less.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\localResizeIMG_40428586\dist\lrz.all.bundle.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\zangodb_74054116\docs\scripts\jquery.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\Snap.js_9158654\demo\apps\ratchet\ratchet.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\9\vue-cropper_92027632\next\dist\vue-cropper.es.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\style2paints_93354260\V4.5\s2p_v45_server\game\src\project.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\Springboot-Notebook_275712523\springboot101\去水印\springboot-douyin-watermark\src\main\resources\static\js\index.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\opentelemetry-js_185901023\examples\opentelemetry-web\examples\fetchXhrB3\index.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\node-mongodb-native_462292\docs\3.3\scripts\jquery.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\WordPress_2889328\wp-includes\js\dist\vendor\wp-polyfill-fetch.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\MikuTools_173327259\utils\libgif.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\libsodium.js_29293352\browsers-test\onetimeauth.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__dojo__1.4.6__dojo__dojo.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\remotestorage.js_1052694\src\requests.ts,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\1\Bootstrap-Admin-Template_8203555\src\lib\plupload\js\moxie.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\3\flv.js_58623321\src\io\xhr-moz-chunked-loader.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\chatgpt.js_614250126\dist\chatgpt-2.3.1.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\1\application-shell_43752413\src\scripts\controller\Controller.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\classic-react-workshop_33502554\subjects\16-Redux\solution\utils\xhr.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__ext-core__3.0.0__ext-core.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\jsbin_324747\public\js\vendor\eventsource.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\hyper-fetch_420032474\packages\core\src\adapter\adapter.browser.ts,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\cropper_16977232\dist\cropper.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\calibre-web_40089578\cps\static\js\libs\reader.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\glslEditor_49336543\src\js\tools\common.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__dojo__1.7.0__dojo__dojo.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\style2paints_93354260\V1\server\game\src\project.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\1\bliss_40975535\bliss.shy.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\3\dzzoffice_29054113\dzz\DPlayer\images\flv.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\webfunny_monitor_139662221\servers\monitor\lib\debug\webfunny.debug.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\fixtures\wpt\xhr\access-control-preflight-request-allow-headers-returns-star.any.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\PixelKit-Bootstrap-UI-Kits_13863797\dark-velvet\dark-velvet-less\js\libs\less.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\3\ghostium_14315553\assets\js\foot-scripts.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\9\UserScripts_70306830\DownloadAllContent\DownloadAllContent.user.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\1\abcjs_15205201\src\synth\load-note.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\webgl-fundamentals_3253898\webgl\resources\tdl\io.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\web-clipper_153322501\src\service\request\tool\basic.ts,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\seagull_25102239\static\bower_components\jquery\src\ajax\xhr.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__spf__2.3.0__spf.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\chatgpt.js_614250126\dist\chatgpt-2.3.7.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\9\todomvc_1844251\bower_components\webcomponentsjs\webcomponents-lite.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\node-mongodb-native_462292\docs\3.0\scripts\jquery.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\learn-to-send-email-via-google-script-html-no-server_44434384\form-submission-handler.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\javascript-xhr\post_with_data_with_percent_sign.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\noisecraft_370396971\public\browse.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\jquip_2810191\dist\jquip.ajax.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\jQuery_15890297\2.1.1\src\ajax\xhr.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\fixtures\wpt\service-workers\service-worker\resources\load_worker.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\screencasts_8410317\reactiveDataVis\bower_components\jquery\src\ajax\xhr.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\limejs_1263177\lime\src\audio\audio.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\javascript-xhr\get_with_data.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\phaser-ce-examples_17645158\examples\wip\misc\pt.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\libsodium.js_29293352\browsers-test\sodium_utils.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__dojo__1.9.2__dojo__dojo.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\3\esp32-wifi-penetration-tool_354963447\components\webserver\utils\index.html,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\1\blockbench_93747383\lib\targa.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\wad_15011587\build\wad.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\sveltestrap_85488373\docs\v4\7.2200b7b8ae9433d2f923.manager.bundle.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\3\favorites-web_65176628\app\src\main\resources\static\vendor\cropper\cropper.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\curlconverter_28468993\test\fixtures\javascript-xhr\post_with_urlencoded_data_and_headers.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\opentelemetry-js_185901023\examples\opentelemetry-web\examples\xml-http-request\index.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\orillusion_613977151\packages\draco\draco_wasm_wrapper_gltf.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\KodExplorer_12594863\static\js\lib\util.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\Heimdall_119047018\vendor\phpunit\php-code-coverage\src\Report\Html\Renderer\Template\js\d3.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\MIDI.js_3457006\js\midi\plugin.webaudio.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\webfunny_monitor_139662221\servers\event\lib\webfunny-track.web.umd.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\webfunny_monitor_139662221\servers\event\lib\WechatSdkReleaseScript20241101153411.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\phaser-ce-examples_17645158\examples\wip\afm\js\jquery-2.0.3.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\SingleFile_906022\lib\single-file-extension-background.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__dojo__1.7.3__dojo__dojo.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\gsplat.js_713114206\src\wasm\data.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\SpringBootBucket_123775376\springboot-websocket\src\test\java\com\xncoding\jwt\socket\client\html\js\sockjs.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\jdpro_645332264\JDSignValidator.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\xdomain_9311021\dist\xdomain.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\fixtures\wpt\xhr\blob-range.any.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\lemon_14370620\webapp\cdn\public\less\2.5.1\less.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\3\FIR_32028167\incidents\static\vendor\nvd3\d3.v3.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\node-mongodb-native_462292\docs\3.6\scripts\jquery.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\my-room-in-3d_393666962\static\basis\basis_transcoder.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\istanbul_5775917\test\browser\support\vendor\yui-support.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\6\OneManager-php_230926110\theme\onemoe.html,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\PreloadJS_3506930\lib\preloadjs.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__dojo__1.8.0__dojo__dojo.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\7\poisontap_73915307\js\ajax.googleapis.com__ajax__libs__dojo__1.10.3__dojo__dojo.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\miniPaint_11766620\src\js\libs\color-thief.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\webfunny_monitor_139662221\servers\event\lib\webfunny.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\1\bootstrap-application-wizard_8061175\demo\js\jquery-2.0.3.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\2\d3plus_7512098\packages\export\src\saveElement.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\Hospital_57602929\submitHospital\submit.html,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\9\syte_4459589\syte\static\less\less-1.3.1.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\webcamjs_17383170\webcam.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\8\ShellPhish_276585186\sites\pinterest\pjs-22-c150d8ee52dea5f25e55.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\4\Jalpc_59932776\static\assets\i18-20210315.min.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\5\jsmind_5562943\js-legacy\jsmind.js,Inter-Process Communication (IPC),93,JavaScript*,HTTP Server - side based on XMLHttpRequest in JavaScript,"['Step 1: Create a new XMLHttpRequest object to initiate the request.', 'Step 2: Configure the request with the `open()` method, defining the request type (GET, POST) and the URL.', 'Step 3: Set the request headers using `setRequestHeader()` for specific content types.', 'Step 4: Set up response callback to handle asynchronous events', 'Step 5: Send the request to the server using the `send()` or `sendAsBinary()` method.']"
D:\CAE\Splited_Repository\10\web-development-with-node-and-express_18394992\ch12\meadowlark.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\2\CommonsNet_59821494\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\Locker_1145302\Collections\Links\links.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\builderbook_112898455\builderbook\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\vue-hackernews-2.0_65052980\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\redux-devtools-extension_44869078\examples\counter\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\mist_37201011\tests\_base.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\hybrid_26557412\scripts\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\mand-mobile_126504027\site\build\dev-server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\Locker_1145302\Apps\LongCal\app.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\web-development-with-node-and-express_18394992\ch05\meadowlark.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\2\cinema-microservice_79661334\api-gateway\src\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\node-red_12618379\test\nodes\core\network\21-httprequest_spec.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\8\stf_37834277\lib\units\storage\s3.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\backbonetutorials_1549501\examples\cross-domain\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\javascript_playground_173529836\jspostgresweb\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\8\senna.js_22793191\examples\form\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\2\devtron_51622074\test\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\bottender_107108009\examples\line-liff-v2\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\react-draft-wysiwyg_67361765\docs\config\server.dev.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\primus_10932532\examples\middleware\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\polyfill-library_762719221\test\polyfills\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\react-router-tutorial_51420370\lessons\12-navigating\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\be-mean_41759865\Apostila\module-nodejs\src\aula-express\app-res-links.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\javascript_playground_173529836\idempotency\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\node-red_12618379\packages\node_modules\node-red\red.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\javascript_playground_173529836\postgresnode-pool\pool.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\vue-zhihu-daily_59345600\server\app.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\openapi-to-graphql_147564967\packages\openapi-to-graphql\test\example_api7_server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\SysMocap_467799658\webserv\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\instant.io_22553278\server\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\webpack-hot-middleware_34994276\example\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\react-redux-tutorial_49178942\redux-examples\real-world\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\foaas_11469732\lib\foaas.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\web-development-with-node-and-express_18394992\ch15\meadowlark.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\2\casino-server_27923115\lib\login_server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\node-express-course_338102540\02-express-tutorial\final\10-middleware-options.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\8\SpotifyAPI-NET_16323991\SpotifyAPI.Web.Examples\Example.TokenSwap\Server\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\vue-demo_63043024\build\dev.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\web-development-with-node-and-express_18394992\ch16\meadowlark.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\node-slack-sdk_18117991\examples\oauth-v1\app.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\javascript_playground_173529836\sidecar2\log.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\draft-js_52113921\examples\draft-0-10-0\universal\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\2\curso-js_217322229\node\aula8\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\build-your-own-mint_164251040\scripts\plaidServer.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\guess_127689297\experiments\guess-static-sites\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\react-monocle_61919271\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\2\dizquetv_269846860\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\vue-zhihu-daily_59345600\build\dev-server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\vue-validator_15117001\examples\async\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\builderbook_112898455\book\3-begin\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\node-images_8391910\demo\uploadServer.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\N-blog_10309334\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\Blog_137582912\websocket\iframe流.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\builderbook_112898455\book\5-begin\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\redux-devtools-extension_44869078\examples\todomvc\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\react-render-tracker_389568562\scripts\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\be-mean_41759865\Apostila\module-nodejs\src\aula-express\app-res-render-html.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\loklak_walls_61033249\iframely\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\face-api.js_134035452\examples\examples-browser\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\parse-server_50603846\spec\index.spec.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\resumable.js_2003404\samples\Node.js\app.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\es6tutorial_18964487\app\bower_components\marked\test\browser\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\fuelux_4924151\test\regression\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\vscode-rainbow-fart_267863774\src\service.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\builderbook_112898455\book\8-begin\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\whistle_32131850\lib\plugins\load-plugin.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\Locker_1145302\Connectors\SMTP\smtp.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\Locker_1145302\Collections\Contacts\contacts.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\bootmetro_4455122\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\Locker_1145302\tests\Data.tests\.npm\photos\0.0.2\package\photos.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\web-development-with-node-and-express_18394992\ch10\meadowlark.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\g9_57250889\devServer.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\terminus_112529625\example\oracle\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\web-development-with-node-and-express_18394992\ch11\playground.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\you-dont-know-node_43770860\code\server-stream.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\builderbook_112898455\book\6-end\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\angularjs-book_8108230\chapter2\talkingToServers\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\project_chat_application_205004754\server\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\http-proxy-middleware_32219142\examples\express\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\express-gateway_62678265\test\e2e\oauth2-authorization-code.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\swip_60904803\examples\particles\server\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\be-mean_41759865\Apostila\module-nodejs\src\aula-express\app-res-render-module-users.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\hello_246220204\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\builderbook_112898455\book\7-end\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\builderbook_112898455\book\4-begin\server\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\2\cloudquery_166514296\backend\index.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\4\jquip_2810191\test\ajax\node_modules\express\testing\foo\app.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\nodejs-basics_192476541\node-jwt-mysql-auth\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\bootstrap-treeview_15324383\app.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\3\falcor_30732364\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\webmc_270403199\lib\proxy.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\5\jsonbox_206067456\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\openai-scf-proxy_610110374\app.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\web-development-with-node-and-express_18394992\ch08-jquery-file-upload\meadowlark.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\10\webpackmonitor_103567934\plugin\npm-module\utils\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\6\Neurite_624122214\localhost_servers\wiki-search\novelty.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\7\React-Dropzone-Component_35572778\example\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\braft-editor_99996585\playground\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\1\bpmn-js-examples_20054543\properties-panel-async-extension\server.js,Inter-Process Communication (IPC),96,JavaScript*,HTTP based on express in javascript,"['Step 1: Import the Express framework module.', 'Step 2: Create an Express application instance.', 'Step 3: Configure middleware for request processing.', 'Step 4: Define route handlers for HTTP methods.', 'Step 5: Start the server and listen on a specified port.']"
D:\CAE\Splited_Repository\9\tern_8635901\plugin\node.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\5\Locker_1145302\Ops\publish.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\8\superagent_1607357\test\node\query.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\express\node_modules\connect\node_modules\formidable\test\integration\test-octet-stream.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\4\jsbin_324747\public\js\vendor\tern\plugin\node.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\4\hyper-express_355713473\tests\components\http\Request.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\10\whistle_32131850\biz\webui\lib\index.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\8\spider_collection_238175329\zhihuAnswerSpider\node_modules\jsdom\lib\jsdom\living\xhr\xhr-utils.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\5\leetcode-cli_65799750\lib\plugin.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\1\AhMyth-Android-RAT_96493616\AhMyth-Server\app\node_modules\pullstream\test\pullStreamTest.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\3\entropic_182423586\cli\lib\commands\publish.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\6\node-soap_1584707\test\client-test.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\3\framework_7190749\utils.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\5\knox_916313\test\knox.test.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\express\node_modules\connect\node_modules\formidable\test\legacy\system\test-multi-video-upload.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\8\superagent_1607357\test\node\pipe.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\1\abricotine_46560339\app\files.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\3\electerm_106087444\build\bin\custom-upload.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\8\spider_collection_238175329\zhihu_user_info_spider\node_modules\jsdom\lib\jsdom\living\xhr\xhr-utils.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\3\formidable_655209\test-legacy\system\test-multi-video-upload.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\8\superagent_1607357\src\node\index.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\9\udemy-downloader-gui_108510101\assets\js\app.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\express\node_modules\connect\node_modules\formidable\test\legacy\system\test-multi-video-upload.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\10\zombie_1141441\src\pipeline.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\7\readable-stream_5187096\test\parallel\test-stream-finished.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\4\html-minifier_504220\benchmark.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\express\node_modules\connect\node_modules\formidable\test\integration\test-octet-stream.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\5\Locker_1145302\Common\node\lfs.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-pipes.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\4\hapi_2163263\test\transmit.js,Inter-Process Communication (IPC),99,JavaScript*,Pipe Client-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file operations and `http` for making HTTP requests).', 'Step 2: Create a readable stream from a file using `fs.createReadStream()`.', 'Step 3: Create an HTTP request using `http.request()` to send the file data.', ""Step 4: Use `pipe()` to send the file stream data to the HTTP request's writable stream.""]"
D:\CAE\Splited_Repository\8\sing-app_132895292\node_modules\node-gyp\test\simple-proxy.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\ace_1028340\static.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\primus_10932532\test\common.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\3\elm-live_46166473\lib\src\start.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\bigpipe_9049159\test\pipe.test.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\9\testem_2034023\examples\coverage_istanbul\testem.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\angularjs-book_8108230\chapter2\talkingToServers\node_modules\express\node_modules\connect\node_modules\formidable\tool\record.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\3\forever_942903\lib\forever\worker.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\shoe\example\invert\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\primus_10932532\examples\events\index.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\nodemailer_1272424\test\mime-node\mime-node-test.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\node-feedparser_2392967\examples\complete.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\marble_132704094\benchmarks\middlewares.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\stf_37834277\lib\units\storage\plugins\apk\index.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-api.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\express\node_modules\connect\node_modules\formidable\tool\record.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\test\http_uppercaserer\valid_01.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\rss-parser_46092465\test\parser.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\nock_2436267\tests\got\test_intercept.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\needle_2956541\test\output_spec.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\C1000K-Servers_36058160\nodejs\node_modules\nodejs-websocket\samples\chat\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\exercises\http_uppercaserer\solution\solution.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\nodemailer_1272424\test\fetch\nmfetch-test.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\express\node_modules\connect\node_modules\formidable\tool\record.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\angularjs-book_8108230\chapter2\talkingToServers\node_modules\express\node_modules\connect\node_modules\formidable\test\integration\test-fixtures.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\react-demos_32726377\demo13\src\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\shoe\test\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\nodejs-basics_192476541\nodejs-basics\play-video.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\test\http_file_server\valid_01.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\lightproxy_230353730\vendor\whistle\lib\plugins\load-plugin.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\node-html-pdf_18917566\examples\serve-http\index.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\10\whistle_32131850\lib\plugins\proxy.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\3\editor.js_47039255\devserver.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\primus_10932532\examples\echo\index.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\binaryjs_4829739\examples\imageshare\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\primus_10932532\test\primus.test.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-body.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\tiny-lr-fork\lib\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\rabbit.js_949801\example\sockjs\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\4\jquip_2810191\test\ajax\node_modules\express\node_modules\connect\node_modules\formidable\tool\record.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\express\node_modules\connect\node_modules\formidable\test\integration\test-fixtures.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\2\canvas-confetti_119001901\build\serve.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\browser\start.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\shoe\example\dnode\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\3\gentelella_35658863\vendors\mjolnic-bootstrap-colorpicker\serve.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\lazyestload.js_143507997\gulpfile.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\browserless_102619418\packages\screencast\examples\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\primus_10932532\issues\110\index.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\binaryjs_4829739\examples\fileupload\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\marble_132704094\benchmarks\routing.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\stream-adventure_10733929\test\solutions\http_server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\redoc_45250726\demo\ssr\index.ts,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\needle_2956541\test\response_stream_spec.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\node-soap_1584707\test\server-compress-test.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\9\treesaver_902611\examples\node\lib\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\2\complete-node-bootcamp_191775260\2-how-node-works\final\streams.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\express\node_modules\connect\node_modules\formidable\test\integration\test-fixtures.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\nodemailer_1272424\test\shared\shared-test.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-onelineproxy.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\express\node_modules\connect\node_modules\formidable\example\json.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\needle_2956541\test\compression_spec.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\4\jquip_2810191\test\ajax\node_modules\express\node_modules\connect\node_modules\formidable\test\integration\test-fixtures.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\node-express-course_338102540\01-node-tutorial\17-http-stream.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\9\UglifyJS_5569059\test\jetstream.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\stream-adventure_10733929\problems\http_server\solution.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-gzip.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\test\http_uppercaserer\invalid_02.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\strong-pm_20460946\test\deploy.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-piped-redirect.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\react-demos_32726377\demo13\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\stf_37834277\lib\units\storage\plugins\image\index.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\lawnchair_246773\util\serve.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\exercises\http_file_server\solution\solution.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\dnode\example\shoe\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\express\node_modules\connect\node_modules\formidable\example\json.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\3\fenix_17832279\src\lib\api\server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\phantom\phantom.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\4\jquip_2810191\server\jquip.builder.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\static-code-scan_11649862\static\test-server.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\stream-adventure_10733929\problems\http_client\index.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\3\express-gateway_62678265\test\policies\proxy\proxy.test.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-stream.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\8\store.js_743723\scripts\saucelabs\tunnel.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\2\cli_139910229\workspaces\arborist\test\fixtures\install-types\proxyreg.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\6\nohost_223688419\packages\tools\router\test\proxy.js,Inter-Process Communication (IPC),100,JavaScript*,Pipe Server-side based on fs+http in JavaScript,"['Step 1: Import the necessary modules (`fs` for file system operations and `http` for creating the server).', 'Step 2: Create an HTTP server using `http.createServer()` to handle incoming requests.', 'Step 3: Use `pipe()` to pass the request data to a writable stream, such as a file output stream.']"
D:\CAE\Splited_Repository\9\ungit_10154151\public\main.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\anyproxy_22832533\lib\util.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\8\shadowsocks-manager_26642716\services\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\docs-nodejs\repl.html,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\3\egret-core_16772886\tools\lib\utils.ts,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\10\whistle_32131850\lib\https\ca.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\log4js\lib\appenders\multiprocess.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\4\javascript_playground_173529836\tcp\tcp.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\dnode\example\auth\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\8\stf_37834277\lib\units\device\plugins\vnc\index.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-mongodb-native_462292\test\tools\mongodb-mock\src\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\nats.node_3043048\test\basics.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-postgres_991475\packages\pg\test\integration\client\network-partition-tests.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\todomvc_1844251\examples\typescript-react\node_modules\JSONStream\test\destroy_missing.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-tunnel.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\request_1283503\tests\test-proxy-connect.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-red_12618379\test\unit\@node-red\runtime\lib\storage\localfilesystem\projects\git\authWriter_spec.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\theatre_15393566\compat-tests\utils\testUtils.ts,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\moleculer_82289483\src\transporters\tcp\tcp-reader.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\peerflix-server_18464687\server\engine.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\3\egret-core_16772886\tools\lib\utils.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-red_12618379\packages\node_modules\@node-red\runtime\lib\storage\localfilesystem\projects\git\authServer.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-postgres_991475\packages\pg-pool\test\connection-timeout.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\metro_76504246\packages\metro\src\index.flow.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\3\electerm_106087444\src\app\server\ssh-tunnel.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\rabbit.js_949801\example\ordering\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\broadcast-channel_135900664\dist\es5node\methods\node.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\patchwork_37995048\lib\app\sync\external-handler\git.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-red_12618379\test\nodes\core\network\31-tcpin_spec.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-postgres_991475\packages\pg\test\integration\client\connection-timeout-tests.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-notifier_6965529\lib\utils.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\10\wildduck_84003203\lib\pop3\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\socket.io\node_modules\policyfile\lib\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\8\statsd_1207300\servers\tcp.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\C1000K-Servers_36058160\nodejs\node_modules\nodejs-websocket\Server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\8\sp-dev-fx-webparts_66962179\samples\react-multilist-grid\websocket-driver\examples\tcp_server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\pomelo_5880912\lib\connectors\udpconnector.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\docs-nodejs\async_hooks.html,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\8\sing-app_132895292\node_modules\duplexify\test.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\log4js-node_475599\lib\appenders\multiprocess.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-open-mining-portal_15887579\libs\cliListener.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\3\fenix_17832279\src\lib\api\router.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\quick_redis_blog_266660261\src\services\RedisService.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\dnode\index.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\socket.io\node_modules\policyfile\tests\unit.test.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-postgres_991475\packages\pg\test\unit\connection\error-tests.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\axon_4999876\lib\sockets\sock.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\8\ssh2_5283193\test\test-misc-client-server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\broadcast-channel_135900664\dist\lib\methods\node.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-postgres_991475\packages\pg\test\integration\gh-issues\2079-tests.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\typescript-book_32623292\code\compiler\typings\node\node.d.ts,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\rats-search_119388337\src\background\p2p.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\express\node_modules\connect\node_modules\formidable\test\standalone\test-connection-aborted.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\nodejs-basics_192476541\nodejs-basics\net-server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\10\wildduck_84003203\imap-core\lib\imap-server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\express\node_modules\connect\node_modules\formidable\test\standalone\test-connection-aborted.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\log4js-node_475599\test\tap\tcp-appender-test.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\newman_17449493\npm\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\PreloadJS_3506930\tests\tasks\findopenport.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\log4js-node_475599\lib\appenders\tcp-server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\nohost_223688419\lib\plugins\whistle.nohost\lib\util.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\test\time_server\valid_01.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\moleculer_82289483\test\unit\transporters\tcp\tcp-reader.spec.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\vscode-database-client_250624283\src\service\tunnel\tunnel-ssh.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\typescript-book_32623292\code\compiler\node_modules\ntypescript\typings\node\node.d.ts,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\redbird_22644637\test\register.spec.ts,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-red_12618379\test\nodes\core\network\31-tcprequest_spec.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\vscode-database-client_250624283\src\service\ssh\forward\tunnel.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\pythagora_591742672\src\helpers\redis.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\rats-search_119388337\src\background\portCheck.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\todomvc_1844251\examples\typescript-react\node_modules\JSONStream\test\multiple_objects.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-postgres_991475\packages\pg\test\integration\gh-issues\3174-tests.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\node-red_12618379\packages\node_modules\@node-red\nodes\core\network\31-tcpin.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\AhMyth-Android-RAT_96493616\AhMyth-Server\app\node_modules\duplexify\test.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\socket.io\node_modules\policyfile\tests\unit.test.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\docs-nodejs\cluster.html,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\awesome-blockchain_127364556\src\basic_chain\js\network.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\exercises\time_server\solution\solution.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\TweenJS_1501185\tests\tasks\findopenport.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\9\todomvc_1844251\examples\typescript-react\node_modules\JSONStream\test\multiple_objects_error.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\docs-nodejs\child_process.html,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\7\pythagora_591742672\src\utils\common.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\8\servor_74576329\utils\common.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\4\hapi_2163263\test\core.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\6\N-chat_11168449\node_modules\socket.io\node_modules\policyfile\lib\server.js,Inter-Process Communication (IPC),97,JavaScript*,TCP Server - side based on node.js net,"[""Step 1: Import the built - in 'net' module."", 'Step 2: Create a TCP server instance.', 'Step 3: Handle server lifecycle events and client connections.', 'Step 4: Start listening on a specific port.']"
D:\CAE\Splited_Repository\1\AhMyth-Android-RAT_96493616\AhMyth-Server\app\node_modules\sntp\test\index.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\sntp\test\index.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\4\javascript_playground_173529836\tcp\udp.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\4\golang-for-nodejs-developers_163927392\examples\udp_server.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\2\cube_2374578\lib\cube\server.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\6\persona_1578548\tests\cef-logging.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\9\uptime_3100494\fixtures\dummyTargetUdp.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\8\rtail_25791650\cli\rtail-server.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\6\Orca_121553439\desktop\sources\scripts\core\io\udp.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\2\Cronicle_49249526\lib\discovery.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\5\learnyounode_11899155\docs-nodejs\dgram.html,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\9\uptime_3100494\lib\pollers\udp\udpPoller.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\2\cluster_1356074\lib\master.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\6\Orca_121553439\resources\listener.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\4\jennifer_dewalt_8995733\node\node_modules\sntp\test\index.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\6\node-red_12618379\test\nodes\core\network\32-udpout_spec.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\7\rats-search_119388337\src\background\bt\udp-tracker-request.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\4\hummingbird_605475\lib\tracker.js,Inter-Process Communication (IPC),98,JavaScript*,UDP based on node.js dgram,"[""Step 1: Import the built - in 'dgram' module."", 'Step 2: Create a UDP socket for IPv4 or IPv6.', 'Step 3: Handle socket events such as incoming messages, binding status, and errors.', 'Step 4: Bind the socket to a local port and optionally a specific address.']"
D:\CAE\Splited_Repository\1\Blog_137582912\websocket\websocket.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\2\chrome-remote-interface_9503997\lib\chrome.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\obsidian-outliner_350369033\jest\obsidian-environment.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\4\hook.io_9305769\tests\websocket\ws-echo-test.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\close.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\tts-vue_518004533\electron\utils\edge-api.ts,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\10\whistle_32131850\test\plugins\whistle.test\lib\uiServer.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\node-red_12618379\test\unit\@node-red\editor-api\lib\editor\comms_spec.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\fragments.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\4\hook.io_9305769\lib\resources\broadcast.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\issue-2859.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\1\AhMyth-Android-RAT_96493616\AhMyth-Server\app\node_modules\engine.io\lib\server.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\7\reactide_84232645\lib\new-project-template\new-project\node_modules\http-proxy-middleware\test\e2e\websocket.spec.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\node-slack-sdk_18117991\packages\socket-mode\test\integration.spec.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\socket.io\node_modules\engine.io\lib\server.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\mercurius_148332388\test\custom-root-types.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\2\chalktalk_20341242\server\main.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\1\budo_30808587\lib\reload\server.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\tribeca_38707501\src\service\gateways\coinbase-api.ts,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\mercurius_148332388\test\loaders.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\node-slack-sdk_18117991\packages\rtm-api\test\integration.spec.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\issue-3202.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\close-invalid-utf-8.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\10\whistle_32131850\test\index.test.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\lightproxy_230353730\vendor\whistle\test\index.test.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\3\gekko_10020773\web\server.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\ndb_141745951\services\ndd_service.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\node-inspector_781028\lib\debug-server.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\lightproxy_230353730\vendor\whistle\test\util.test.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\node-red_12618379\test\nodes\core\common\21-debug_spec.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\mStream_47475095\src\api\remote.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\10\whistle_32131850\test\util.test.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\fixtures\websocket.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\4\home-automation_76486448\server\index.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\Nexterm_842102124\server\routes\pveLXC.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\send.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\uWebSockets.js_142631191\tests\smoke.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\8\soul_546207454\src\websocket.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\opal_184366\lib\opal\cli_runners\node_modules\chrome-remote-interface\lib\chrome.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\close-invalid-status-code.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\1\anyproxy_22832533\lib\wsServer.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\mercurius_148332388\test\subscription-connection.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\1\anyproxy_22832533\test\basic.spec.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\diagnostics-channel.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\8\spider_collection_238175329\zhihu_user_info_spider\node_modules\jsdom\lib\jsdom\living\websockets\WebSocket-impl.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\7\pomelo_5880912\lib\connectors\hybrid\wsprocessor.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\parse-server_50603846\spec\ParseWebSocketServer.spec.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\issue-2679.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\3\examples_123316949\cdp\raw_websocket.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\mercurius_148332388\test\subscription-hooks.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\mercurius_148332388\test\errors.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\10\zombie_1141441\src\document.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\5\mercurius_148332388\test\routes.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\engine.io\lib\server.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\client-received-masked-frame.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\4\hook.io_9305769\tests\websocket\wss-echo-test.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\6\overreacted.io_159876616\watcher.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\send-mutable.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\8\spider_collection_238175329\zhihuAnswerSpider\node_modules\jsdom\lib\jsdom\living\websockets\WebSocket-impl.js,Inter-Process Communication (IPC),91,JavaScript*,WebSocket Client-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket connection on the server.', 'Step 3: Define event handlers for connection, messages, errors, and closing the WebSocket.']"
D:\CAE\Splited_Repository\3\gekko_10020773\web\vue\dist\vendor\reconnecting-websocket.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\xviz_140614041\test\modules\cli\websocket.spec.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\atmosphere-chat\overlays\org.atmosphere.client.javascript-2.0.7\javascript\atmosphere-min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\7\read-aloud_70820054\js\peerjs.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.8.4\dist\socket.esm.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.8.4\dist\socket.modern.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\phabricator_1280180\webroot\rsrc\externals\javelin\lib\WebSocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\Golang-100-Days_199952039\Day38-41(beego框架开发博客系统)\code\day39_3、项目详情功能开发\myblog\static\js\reload.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.9.1\dist\socket.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.8.4\dist\_hyperscript_w9y.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\winjs_18102026\tests\TestLib\liveToQ\testsDashboard.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\ws\lib\WebSocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\graphql-tools_54432168\packages\executors\legacy-ws\src\index.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\Golang-100-Days_199952039\Day38-41(beego框架开发博客系统)\code\day39_2、项目首页功能开发\myblog\static\js\reload.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\2\Dexie.js_17203748\addons\Dexie.Syncable\test\unit\tests-syncprovider.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\5\Luckysheet_264125852\src\controllers\server.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\socket.io-client\node_modules\engine.io-client\lib\transports\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\Photon_133619330\src\renderer\utils\jsonrpc.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\tiny-lr-fork\lib\client.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\Home-AssistantConfig_70612113\config\www\community\frigate-hass-card\jsmpeg-ef28408a.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\AhMyth-Android-RAT_96493616\AhMyth-Server\app\node_modules\engine.io-client\engine.io.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.0.8\src\lib\socket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\AiEditor_716968913\src\ai\core\client\ws\WebSocketClient.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\7\RealtimeSTT_684718636\RealtimeSTT_server\index.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\yi-hack-v3_86138605\src\home\yi-hack-v3\www\reboot.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\chat\src\main\webapp\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\9\uirecorder_64893263\chrome-extension\js\background.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\5\live-server_7166430\index.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\Home-AssistantConfig_70612113\config\www\community\frigate-hass-card\index-e0b66e9f.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\7\piral_170884642\src\utilities\piral-debug-utils\src\emulator.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\websocket\continuation-frames.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\karma-mocha-reporter\node_modules\socket.io-client\socket.io.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\Golang-100-Days_199952039\Day38-41(beego框架开发博客系统)\code\day38_2、用户登录功能\myblog\static\js\reload.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\8\RL4LMs_526069335\scripts\crowdworking_templates\pairwise\commongen_pairwise.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\2\codetainer_38206506\Godeps\_workspace\src\github.com\gorilla\websocket\examples\chat\home.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.9.5\dist\socket.modern.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\eidos_651170890\worker\web-worker\api-agent\ws.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\7\primus_10932532\transformers\engine.io\library.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\binary\src\main\webapp\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.8.1\src\lib\socket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\socket.io-client\node_modules\engine.io-client\engine.io.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\FastForward_404295988\src\bypasses\workink.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\Home-AssistantConfig_70612113\config\www\community\frigate-hass-card\jsmpeg-05cdf58e.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\msw_157397583\test\browser\ws-api\ws.clients.browser.test.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\endpoint-security\src\main\webapp\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\tiny-lr-fork\test\client.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\Bonjourr_187342565\src\scripts\utils.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\web-editor_84531631\samples\index.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\8\RL4LMs_526069335\scripts\crowdworking_templates\likert\commongen.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\gekko_10020773\web\vue\public\vendor\reconnecting-websocket.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\9\vialer-js_87069784\src\js\bg\plugins\app.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\Parse-SDK-JS_42541957\src\LiveQueryClient.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\_hyperscript_267440221\www\test\0.9.4\dist\_hyperscript_w9y.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\AI-Writer_389786846\web-client\index.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\atmosphere-chat\overlays\org.atmosphere.client.javascript-2.0.7\javascript\atmosphere.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\properties\src\main\webapp\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\axum_372172254\examples\chat\chat.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\faye-websocket\spec\runner.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\8\RL4LMs_526069335\scripts\crowdworking_templates\likert\IMDB_sentiment_completion.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\8\server_280232135\ui\src\useRoom.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\2\course-tencent-cloud_296000242\public\static\home\js\chapter.live.chat.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\9\trading-vue-js_176145143\test\tests\DataHelper\stream.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\8\Rocket_54168759\examples\upgrade\static\index.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\go-push_138113181\gateway\cli\client.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\8\server_117591846\ui\src\message\WebSocketStore.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\Eel_115559503\eel\eel.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\webim_19071965\resources\static\js\chat.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\webui-aria2_4190976\src\js\services\rpc\sockcall.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\AndroidControl_88256245\resources\web\static\js\device.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\gotrace_53668532\page\js\leap.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\zombie_1141441\test\websocket_test.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\endpoint-async\src\main\webapp\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\2\colyseus_46684632\bundles\colyseus\test\Integration.test.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javascript_playground_173529836\nginx-websockets\index.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\fastjson2_482425877\example-spring6-test\src\main\resources\hello.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\9\undici_133092972\test\fixtures\wpt\websockets\Create-on-worker-shutdown.any.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\subprotocol\src\main\webapp\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\Home-AssistantConfig_70612113\config\www\community\frigate-hass-card\index-33ed76c0.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\7\pinafore_116539127\src\routes\_api\stream\TimelineStream.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\arduino-ide_337042139\arduino-ide-extension\src\browser\monitor-manager-proxy-client-impl.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\2\cocos2d-html5_3224614\external\socketio\socket.io.min.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\WhisperLive_636344889\Audio-Transcription-Firefox\content.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\New-Bing-Anywhere_614826827\src\background\listeners\_bing.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\web-editor_84531631\weditor\static\js\index.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\home-assistant-config_221295919\www\community\frigate-hass-card\live-jsmpeg-9c767737.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\2\cocogoat_414824130\src\modules\webcontrol.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\wedding_107868311\assets\js\dependencies\sails.io.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\AriaNg-Native_86213415\main\lib\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\android_interview_98419904\node_modules\faye-websocket\examples\client.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\dom-to-image_34136758\node_modules\faye-websocket\examples\autobahn_client.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\9\undertow_5103785\examples\src\main\java\io\undertow\examples\websockets\index.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\nanohttpd_5374914\websocket\src\test\resources\echo-test.html,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\1\api_111184073\packages\rpc-provider\src\ws\index.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\extension.js_306484159\programs\develop\webpack\plugin-reload\extensions\chrome-manager-extension\reload-service.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\8\RTCMultiConnection_21046980\dist\RTCMultiConnection.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\4\javaee7-samples_12414592\websocket\whiteboard\src\main\webapp\websocket.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\extension-boilerplate_82643171\src\scripts\livereload.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\msw_157397583\test\node\ws-api\on-unhandled-request\callback.test.ts,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\3\FakeScreenshot_172642413\dist\jquery.upload.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\10\yapi_59996401\client\containers\Project\Interface\InterfaceList\Edit.js,Inter-Process Communication (IPC),89,JavaScript*,WebSocket Client-side based on browser native API in JavaScript,"['Step 1: Initialize a new WebSocket connection.', 'Step 2: Define event handlers for connection, messages, errors, and before window unload.', 'Step 3: Send messages, log errors, handle connection errors, and close the WebSocket connection.']"
D:\CAE\Splited_Repository\6\oicq_285180832\test\core.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\sharedb_9156525\examples\rich-text\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\1\Blog_137582912\多种跨域方式\7.websocket\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\10\xiaochengxu_demos_74629734\014云开发实现小程序支付\cloud\pay\node_modules\socks-proxy-agent\node_modules\agent-base\test\test.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\snapdrop_48242990\server\index.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\6\NativeWebSocket_200769444\NodeServer\index.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\sharedb_9156525\examples\counter\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\3\flow-typed_42698429\definitions\npm\ws_v7.x.x\flow_v0.104.x-\test_ws_v7.x.x.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\10\xiaochengxu_demos_74629734\014云开发实现小程序支付\cloud\pay\node_modules\agent-base\test\test.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\5\jsmpeg_9934117\websocket-relay.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\3\Docker-Proxy_812303359\hubcmdui\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\stf_37834277\lib\units\device\plugins\screen\stream.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\sharedb_9156525\examples\leaderboard\server\index.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\4\godot-demo-projects_60349380\networking\webrtc_signaling\server_node\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\4\isolated-vm_91866654\inspector-example.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\9\undici_133092972\docs\examples\proxy\websocket.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\sharedb_9156525\examples\rich-text-presence\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\10\webpack-bundle-analyzer_71966177\src\viewer.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\sharedb_9156525\examples\textarea\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\10\xviz_140614041\modules\server\src\server\xviz-server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\9\vscode-debug-visualizer_192892917\extension\src\webview\WebviewServer.ts,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\6\MQTT.js_1569980\examples\ws\aedes_server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\6\obsidian-outliner_350369033\jest\global-setup.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\sharedb_9156525\examples\counter-json1\server.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\8\stream-adventure_10733929\problems\websockets\index.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\6\phabricator_1280180\support\aphlict\server\lib\AphlictClientServer.js,Inter-Process Communication (IPC),90,JavaScript*,WebSocket Server-side based on Node.js,"[""Step 1: Require the WebSocket library ('ws')."", 'Step 2: Create a new WebSocket server instance.', 'Step 3: Define event handlers for connection, messages, errors, and closing the server.']"
D:\CAE\Splited_Repository\6\networked-aframe_79324058\server\easyrtc-server.js,Inter-Process Communication (IPC),92,JavaScript*,WebSocket Server-side based on socket.io in JavaScript,"['Step 1: Import the necessary modules (http and socket.io).', 'Step 2: Create an HTTP server to handle incoming requests.', 'Step 3: Bind socket.io to the HTTP server for WebSocket communication.', ""Step 4: Set up event listeners for 'connection','message', 'disconnect' events and start the server.""]"
D:\CAE\Splited_Repository\9\uptime_3100494\app.js,Inter-Process Communication (IPC),92,JavaScript*,WebSocket Server-side based on socket.io in JavaScript,"['Step 1: Import the necessary modules (http and socket.io).', 'Step 2: Create an HTTP server to handle incoming requests.', 'Step 3: Bind socket.io to the HTTP server for WebSocket communication.', ""Step 4: Set up event listeners for 'connection','message', 'disconnect' events and start the server.""]"
D:\CAE\Splited_Repository\2\deployd_2367681\test-app\test-attach.js,Inter-Process Communication (IPC),92,JavaScript*,WebSocket Server-side based on socket.io in JavaScript,"['Step 1: Import the necessary modules (http and socket.io).', 'Step 2: Create an HTTP server to handle incoming requests.', 'Step 3: Bind socket.io to the HTTP server for WebSocket communication.', ""Step 4: Set up event listeners for 'connection','message', 'disconnect' events and start the server.""]"
D:\CAE\Splited_Repository\9\tribeca_38707501\src\service\main.ts,Inter-Process Communication (IPC),92,JavaScript*,WebSocket Server-side based on socket.io in JavaScript,"['Step 1: Import the necessary modules (http and socket.io).', 'Step 2: Create an HTTP server to handle incoming requests.', 'Step 3: Bind socket.io to the HTTP server for WebSocket communication.', ""Step 4: Set up event listeners for 'connection','message', 'disconnect' events and start the server.""]"
